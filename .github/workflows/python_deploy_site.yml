name: Pypi deployment

on:
  workflow_call:
    inputs:
      environment:
        description: 'Github environment to use'
        default: 'deployment_site'
        required: false
        type: string
      branch:
        description: 'Branch on which the site will be deployed'
        required: true
        type: string
      host:
        description: 'Host where the site will be deployed'
        required: true
        type: string
    secrets:
      port:
        description: 'port to deploy the site'
        required: true
      path:
        description: 'path to deploy the site'
        required: true
      username:
        description: 'Username for deploying'
        required: true
      password:
        description: 'Password for deploying'
        required: true

jobs:
  setup:
    name: Preparation
    outputs:
      branchName: ${{ steps.extract_branch.outputs.branchName }}
    runs-on: ubuntu-latest

    steps:
    - name: Extract branch name
      id: extract_branch
      uses: bernardo-mg/extract-branch-name-action@v1

  deploy:
    name: Deploy
    environment: ${{ inputs.environment }}
    needs: setup
    if: ${{ needs.setup.outputs.branchName == inputs.branch }}
    runs-on: ubuntu-latest

    steps:
    - name: Check-out
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
        cache: 'pip'
    - name: Update pip
      run: python -m pip install --upgrade pip
    - name: Install dependencies
      run: if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install sshpass
      run: sudo apt-get install sshpass
    - name: Tests docs
      run: python setup.py test -p docs
    - name: Build docs
      run: python setup.py build_docs
    - name: Move to deployment folder
      run: cd ./build/sphinx/html
    - name: Deploy docs
      uses: bernardo-mg/ssh-deployment-action@develop
      with:
        username: ${{ secrets.username }}
        password: ${{ secrets.password }}
        host: ${{ secrets.host }}
        port: ${{ secrets.port }}
        path: ${{ secrets.path }}
